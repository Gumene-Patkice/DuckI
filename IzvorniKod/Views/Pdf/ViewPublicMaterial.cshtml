@model List<DuckI.Dtos.PublicPdfDto>

<h2>List of Public PDFs</h2>

<div>
    <select id="tagFilter" class="form-control">
        <option value="">All Tags</option>
    </select>
    <button id="filterButton" class="btn btn-primary mt-2">Filter</button>
</div>

<table class="table">
    <thead>
    <tr>
        <th>PDF Name</th>
        <th>Educator Username</th>
        <th>Rating</th>
        <th>Tag Name</th>
        @if (User.IsInRole("SuperStudent") || User.IsInRole("Reviewer"))
        {
            <th>Action</th>
            <th></th>
            <th></th>
        }
    </tr>
    </thead>
    <tbody id="pdfTableBody">
    @foreach (var pdf in Model)
    {
        <tr>
            <td>
                <form action="@Url.Action("OpenPublicPdf", "Pdf")" method="post" target="_blank">
                    <input type="hidden" name="pdfId" value="@pdf.PublicPdfId" />
                    <button type="submit" class="btn-link">@pdf.PdfName</button>
                </form>
            </td>
            <td>@pdf.EducatorUsername</td>
            <td>@pdf.Rating</td>
            <td>@pdf.TagName</td>
            @if (User.IsInRole("SuperStudent"))
            {
                <td>
                    <form class="flag-form" data-pdf-id="@pdf.PublicPdfId">
                        <input type="hidden" name="publicPdfId" value="@pdf.PublicPdfId"/>
                        <button type="submit" class="btn btn-warning">Flag This Pdf</button>
                    </form>
                    <span class="flag-message" style="display:none; color:green;">Successfully added</span>
                </td>
                <td>
                    <form action="@Url.Action("RatePdf", "Pdf")" method="post" style="display:inline;">
                        <input type="hidden" name="pdfId" value="@pdf.PublicPdfId" />
                        <input type="hidden" name="isUpvote" value="true" />
                        <button type="submit" class="btn btn-success">Upvote</button>
                    </form>
                </td>
                <td>
                    <form action="@Url.Action("RatePdf", "Pdf")" method="post" style="display:inline;">
                        <input type="hidden" name="pdfId" value="@pdf.PublicPdfId" />
                        <input type="hidden" name="isUpvote" value="false" />
                        <button type="submit" class="btn btn-warning">Downvote</button>
                    </form>
                </td>
            }
            @if (User.IsInRole("Reviewer"))
            {
            <td>
                <form action="@Url.Action("DeletePublicPdfReviewer", "Pdf")" method="post" style="display:inline;">
                    <input type="hidden" name="pdfId" value="@pdf.PublicPdfId" />
                    <textarea name="description" placeholder="Enter description" required></textarea>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </form>
            </td>
            }
        </tr>
    }
    </tbody>
</table>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', async function() {
            const response = await fetch('/Pdf/GetAllTags', {
                method: 'GET'
            });
            const tags = await response.json();
            const tagFilter = document.getElementById('tagFilter');
            tags.forEach(tag => {
                const option = document.createElement('option');
                option.value = tag.tagName;
                option.textContent = tag.tagName;
                tagFilter.appendChild(option);
            });
        });

        document.getElementById('filterButton').addEventListener('click', function() {
            const selectedTag = document.getElementById('tagFilter').value.toLowerCase();
            const rows = document.querySelectorAll('#pdfTableBody tr');

            rows.forEach(row => {
                const tagName = row.querySelector('td:nth-child(4)').textContent.toLowerCase();
                if (selectedTag === "" || tagName === selectedTag) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            });
        });
        
        document.querySelectorAll('.flag-form').forEach(form => {
            form.addEventListener('submit', async function(event) {
                event.preventDefault();
                const formData = new FormData(this);
                const response = await fetch('/Pdf/FlagPdf', {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    this.nextElementSibling.style.display = 'block';
                } else if (response.status >= 400 && response.status < 500) {
                    alert('The selected pdf has already been flagged!');
                } else {
                    alert('Failed to flag the PDF.');
                }
            });
        });
    
    </script>
}