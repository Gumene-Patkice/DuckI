@{
    ViewData["Title"] = "Upload PDF";
}

<h2>Upload PDF</h2>

@if (User.IsInRole("SuperStudent"))
{
    <form id="uploadPrivateForm" action="@Url.Action("UploadPrivatePdf", "Pdf")" enctype="multipart/form-data">
        <div class="form-group">
            <label for="file">Select PDF:</label>
            <input class="form-control" type="file" id="file" name="file" required />
        </div>
        <div class="form-group">
            <label for="tagName">Tag Name:</label>
            <select class="form-control" id="tagName" name="tagName" required>
                @foreach (var tag in ViewBag.Tags)
                {
                    <option value="@tag.Value">@tag.Text</option>
                }
            </select>
        </div>
        <button class="btn btn-primary" type="submit">Upload Private PDF</button>
    </form>
}

@if (User.IsInRole("Educator"))
{
    <form id="uploadPublicForm" action="@Url.Action("UploadPublicPdf", "Pdf")" enctype="multipart/form-data">
        <div class="form-group">
            <label for="file">Select PDF:</label>
            <input class="form-control" type="file" id="file" name="file" required />
        </div>
        <div class="form-group">
            <label for="tagName">Tag Name:</label>
            <select class="form-control" id="tagName" name="tagName" required>
                @foreach (var tag in ViewBag.Tags)
                {
                    <option value="@tag.Value">@tag.Text</option>
                }
            </select>
        </div>
        <button class="btn btn-primary" type="submit">Upload Public PDF</button>
    </form>
}

<div id="notification" style="display:none; color: green;">PDF uploaded successfully.</div>
<div id="error" style="display:none; color: red;"></div>

@section Scripts {
    <script>
        // notification update
        async function checkAndSubmitForm(form, isPublic) {
            const formData = new FormData(form);
            const pdfName = formData.get('file').name;
            const response = await fetch(`@Url.Action("FetchPdfByName", "Pdf")?pdfName=${encodeURIComponent(pdfName)}&isPublic=${isPublic}`, {
                method: 'GET'
            });

            const exists = await response.json();

            if (exists) {
                const confirmReplace = confirm("The PDF already exists. Do you want to replace it?");
                if (!confirmReplace) {
                    return;
                }
            }

            const uploadResponse = await fetch(form.action, {
                method: 'POST',
                body: formData
            });

            if (uploadResponse.ok) {
                document.getElementById('notification').style.display = 'block';
                document.getElementById('error').style.display = 'none';
            } else {
                const errorText = await uploadResponse.text();
                document.getElementById('error').innerText = `Error: ${errorText}`;
                document.getElementById('error').style.display = 'block';
                document.getElementById('notification').style.display = 'none';
            }
        }

        document.getElementById('uploadPrivateForm')?.addEventListener('submit', function (event) {
            event.preventDefault();
            checkAndSubmitForm(this, false);
        });

        document.getElementById('uploadPublicForm')?.addEventListener('submit', function (event) {
            event.preventDefault();
            checkAndSubmitForm(this, true);
        });

        // hiding the success message (so that it is not constantly visible after one successful upload)
        // same for the error message
        document.getElementById('file').addEventListener('click', function () {
            document.getElementById('notification').style.display = 'none';
            document.getElementById('error').style.display = 'none';
        });

        document.getElementById('tagName').addEventListener('click', function () {
            document.getElementById('notification').style.display = 'none';
            document.getElementById('error').style.display = 'none';
        });
    </script>
}