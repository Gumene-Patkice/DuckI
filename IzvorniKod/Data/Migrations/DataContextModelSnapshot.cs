// <auto-generated />
using System;
using Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Models.Administrator", b =>
                {
                    b.Property<long>("IdAdministrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdAdministrator"));

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.HasKey("IdAdministrator");

                    b.HasIndex("IdUser")
                        .IsUnique();

                    b.ToTable("Administrators");

                    b.HasData(
                        new
                        {
                            IdAdministrator = 1L,
                            Guid = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdUser = 3L
                        });
                });

            modelBuilder.Entity("Data.Models.Educator", b =>
                {
                    b.Property<long>("IdEducator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdEducator"));

                    b.Property<bool>("Approved")
                        .HasColumnType("boolean");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.HasKey("IdEducator");

                    b.HasIndex("IdUser")
                        .IsUnique();

                    b.ToTable("Educators");

                    b.HasData(
                        new
                        {
                            IdEducator = 1L,
                            Approved = false,
                            Guid = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdUser = 2L
                        });
                });

            modelBuilder.Entity("Data.Models.Reviewer", b =>
                {
                    b.Property<long>("IdReviewer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdReviewer"));

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.HasKey("IdReviewer");

                    b.HasIndex("IdUser")
                        .IsUnique();

                    b.ToTable("Reviewers");
                });

            modelBuilder.Entity("Data.Models.Student", b =>
                {
                    b.Property<long>("IdStudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdStudent"));

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.HasKey("IdStudent");

                    b.HasIndex("IdUser")
                        .IsUnique();

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            IdStudent = 1L,
                            Guid = new Guid("94e3b456-0cba-4ba7-af64-f0c247a14e2e"),
                            IdUser = 1L
                        });
                });

            modelBuilder.Entity("Data.Models.User", b =>
                {
                    b.Property<long>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdUser"));

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("IdUser");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            IdUser = 1L,
                            Guid = new Guid("31cfc9fe-6dea-4831-8841-3bfcd73a3389"),
                            Mail = "user1@example.com",
                            Password = "password1"
                        },
                        new
                        {
                            IdUser = 2L,
                            Guid = new Guid("d6f78320-8f4a-47fa-a6fa-7d5093b1da68"),
                            Mail = "user2@example.com",
                            Password = "password2"
                        },
                        new
                        {
                            IdUser = 3L,
                            Guid = new Guid("caa24e64-60d6-4456-be89-1760851bb1a7"),
                            Mail = "user3@example.com",
                            Password = "password3"
                        },
                        new
                        {
                            IdUser = 4L,
                            Guid = new Guid("0c1206dd-b2a8-422b-a785-3649fcf29de8"),
                            Mail = "user4@example.com",
                            Password = "password4"
                        },
                        new
                        {
                            IdUser = 5L,
                            Guid = new Guid("b1d251e6-fc77-454c-b30e-ab408a642951"),
                            Mail = "user5@example.com",
                            Password = "password5"
                        });
                });

            modelBuilder.Entity("Data.Models.Administrator", b =>
                {
                    b.HasOne("Data.Models.User", "User")
                        .WithOne("Administrator")
                        .HasForeignKey("Data.Models.Administrator", "IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Models.Educator", b =>
                {
                    b.HasOne("Data.Models.User", "User")
                        .WithOne("Educator")
                        .HasForeignKey("Data.Models.Educator", "IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Models.Reviewer", b =>
                {
                    b.HasOne("Data.Models.User", "User")
                        .WithOne("Reviewer")
                        .HasForeignKey("Data.Models.Reviewer", "IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Models.Student", b =>
                {
                    b.HasOne("Data.Models.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("Data.Models.Student", "IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Models.User", b =>
                {
                    b.Navigation("Administrator");

                    b.Navigation("Educator");

                    b.Navigation("Reviewer");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
