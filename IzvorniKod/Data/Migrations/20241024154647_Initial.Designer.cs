// <auto-generated />
using System;
using Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241024154647_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Data.Models.Administrator", b =>
                {
                    b.Property<long>("IdAdministrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdAdministrator"));

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.HasKey("IdAdministrator");

                    b.HasIndex("IdUser")
                        .IsUnique();

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("Data.Models.Educator", b =>
                {
                    b.Property<long>("IdEducator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdEducator"));

                    b.Property<bool>("Approved")
                        .HasColumnType("boolean");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.HasKey("IdEducator");

                    b.HasIndex("IdUser")
                        .IsUnique();

                    b.ToTable("Educators");
                });

            modelBuilder.Entity("Data.Models.Reviewer", b =>
                {
                    b.Property<long>("IdReviewer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdReviewer"));

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.HasKey("IdReviewer");

                    b.HasIndex("IdUser")
                        .IsUnique();

                    b.ToTable("Reviewers");
                });

            modelBuilder.Entity("Data.Models.Student", b =>
                {
                    b.Property<long>("IdStudent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdStudent"));

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<long>("IdUser")
                        .HasColumnType("bigint");

                    b.HasKey("IdStudent");

                    b.HasIndex("IdUser")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Data.Models.User", b =>
                {
                    b.Property<long>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("IdUser"));

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.HasKey("IdUser");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Data.Models.Administrator", b =>
                {
                    b.HasOne("Data.Models.User", "User")
                        .WithOne("Administrator")
                        .HasForeignKey("Data.Models.Administrator", "IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Models.Educator", b =>
                {
                    b.HasOne("Data.Models.User", "User")
                        .WithOne("Educator")
                        .HasForeignKey("Data.Models.Educator", "IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Models.Reviewer", b =>
                {
                    b.HasOne("Data.Models.User", "User")
                        .WithOne("Reviewer")
                        .HasForeignKey("Data.Models.Reviewer", "IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Models.Student", b =>
                {
                    b.HasOne("Data.Models.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("Data.Models.Student", "IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Data.Models.User", b =>
                {
                    b.Navigation("Administrator");

                    b.Navigation("Educator");

                    b.Navigation("Reviewer");

                    b.Navigation("Student");
                });
#pragma warning restore 612, 618
        }
    }
}
